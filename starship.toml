"$schema" = 'https://starship.rs/config-schema.json'

# Insert a blank line between shell prompts
add_newline = true

# Increase the default command timeout to 2 seconds
command_timeout = 2000

# Define the order and format of the information in our prompt
format = """\
[](fg:#3B76F0)\
$directory\
${custom.directory_separator_not_git}\
${custom.directory_separator_git}\
$symbol($git_branch[](fg:#FCF392))\
$symbol( $git_commit$git_status$git_metrics$git_state)$fill$cmd_duration$all\
${custom.git_config_email}
$character"""

# Fill character (empty space) between the left and right prompt
[fill]
symbol = " "

# Disable the line break between the first and second prompt lines
[line_break]
disabled = true

# Customize the format of the working directory
[directory]
truncate_to_repo = true
format = "[ $path ]($style)"
style = "bg:#3B76F0"
truncation_length = 3
truncation_symbol = "…/"

[directory.substitutions]
"Documents" = "󰈙 "
"Downloads" = " "
"Music" = " "
"Pictures" = " "
".config" = " "

[git_branch]
symbol = " "
format = "[ $symbol$branch(:$remote_branch) ]($style)"
style = "fg:#1C3A5E bg:#FCF392"

[git_metrics]
disabled = false

[package]
disabled = true # Enable to output the current working directory's package version
format = "[$symbol$version]($style) "
display_private = true

# Output the command duration if over 2 seconds
[cmd_duration]
min_time = 2_000
format = "[   $duration ]($style)"
style = "white"

# Output the current git config email address
[custom.git_config_email]
description = "Output the current git user's configured email address."
command = "git config user.email"
format = "\n[$symbol(  $output)]($style)"
# Only when inside git repository
when = "git rev-parse --is-inside-work-tree >/dev/null 2>&1"
style = "text"

# Output a styled separator right after the directory when inside a git repository.
[custom.directory_separator_git]
description = "Output a styled separator right after the directory when inside a git repository."
command = ""
format = "[](fg:#3B76F0 bg:#FCF392)"
# Only when inside git repository
when = "git rev-parse --is-inside-work-tree >/dev/null 2>&1"

# Output a styled separator right after the directory when NOT inside a git repository.
[custom.directory_separator_not_git]
description = "Output a styled separator right after the directory when NOT inside a git repository."
command = ""
format = "[](fg:#3B76F0)"
# Only when NOT inside a git repository
when = "! git rev-parse --is-inside-work-tree > /dev/null 2>&1"

# format = """
# [░▒▓](#a3aed2)\
# [  ](bg:#a3aed2 fg:#090c0c)\
# [](bg:#769ff0 fg:#a3aed2)\
# $directory\
# [](fg:#769ff0 bg:#394260)\
# $git_branch\
# $git_status\
# [](fg:#394260 bg:#212736)\
# $nodejs\
# $rust\
# $golang\
# $php\
# [](fg:#212736 bg:#1d2230)\
# [ ](fg:#1d2230)\
# \n$character"""
#
# [directory]
# style = "fg:#36454F bg:#769ff0"
# format = "[ $path ]($style)"
#
# [git_branch]
# symbol = ""
# style = "bg:#394260"
# format = '[[ $symbol $branch ](fg:#769ff0 bg:#394260)]($style)'
#
# [git_status]
# style = "bg:#394260"
# format = '[[($all_status$ahead_behind )](fg:#769ff0 bg:#394260)]($style)'
#
# [nodejs]
# symbol = ""
# style = "bg:#212736"
# format = '[[ $symbol ($version) ](fg:#769ff0 bg:#212736)]($style)'
#
# [rust]
# symbol = ""
# style = "bg:#212736"
# format = '[[ $symbol ($version) ](fg:#769ff0 bg:#212736)]($style)'
#
# [golang]
# symbol = ""
# style = "bg:#212736"
# format = '[[ $symbol ($version) ](fg:#769ff0 bg:#212736)]($style)'
#
# [php]
# symbol = ""
# style = "bg:#212736"
# format = '[[ $symbol ($version) ](fg:#769ff0 bg:#212736)]($style)'
#
# [time]
# disabled = false
# time_format = "%R" # Hour:Minute Format
# style = "bg:#1d2230"
# format = '[[  $time ](fg:#a0a9cb bg:#1d2230)]($style)'
#
# [cmd_duration]
# show_milliseconds = true
